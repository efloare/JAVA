package rpg.game.Viewer;

import rpg.game.Interogate_and_insert.InterrogateAndCheckPlayer;
import rpg.game.Model_base.Caracter;
import rpg.game.Messenger;
import rpg.game.Storage.Save_Hero_to_file;

import javax.swing.*;
import java.awt.event.ItemEvent;
import java.util.Observable;

public class NewPlayer extends javax.swing.JPanel {

    public static String path = "C:/Users/Bb/Desktop/TRAINING JAVA/Day 2/RPG_GAME/src/rpg/game/Storage/Saved_heroes.ser";
    Caracter.Hero newcaracter = new Caracter.Hero();



    /**
     * Creates new form NewPlayer
     */
    public NewPlayer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    public void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        HeroTipe = new javax.swing.JComboBox<>();
        PlayerName = new javax.swing.JTextField();
        HeroName = new java.awt.Label();
        HeroName1 = new java.awt.Label();
        Continue = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        StatusOutput = new javax.swing.JTextArea();
        Difficulty = new java.awt.Label();
        jSlider1 = new javax.swing.JSlider(0, 1, 20, 1);

        Difficulty1 = new java.awt.Label();

        HeroTipe.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        HeroTipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Orc", "Elf", "Knight", "Mage" }));
        HeroTipe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(ItemEvent evt) {

                HeroTipeItemStateChanged(evt);
            }
        });
        HeroTipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeroTipeActionPerformed(evt);
            }
        });
        HeroTipe.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                HeroTipePropertyChange(evt);
            }
        });

        PlayerName.setText("Hero name");
        PlayerName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                PlayerNameInputMethodTextChanged(evt);
            }
        });
        PlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayerNameActionPerformed(evt);
            }
        });
        PlayerName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                PlayerNamePropertyChange(evt);
            }
        });
        PlayerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PlayerNameKeyTyped(evt);
            }
        });

        HeroName.setFont(new java.awt.Font("Eras Medium ITC", 0, 24)); // NOI18N
        HeroName.setName(""); // NOI18N
        HeroName.setText("Charcater type");

        HeroName1.setFont(new java.awt.Font("Eras Medium ITC", 0, 24)); // NOI18N
        HeroName1.setName(""); // NOI18N
        HeroName1.setText("Hero name:");

        Continue.setText("Continue");
        Continue.setActionCommand("Continue");
        Continue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinueActionPerformed(evt);
            }
        });

        StatusOutput.setColumns(20);
        StatusOutput.setRows(5);
        jScrollPane1.setViewportView(StatusOutput);

        Difficulty.setFont(new java.awt.Font("Eras Medium ITC", 0, 24)); // NOI18N
        Difficulty.setName(""); // NOI18N
        Difficulty.setText("Dificulty");
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
                newcaracter.setdifficulty(jSlider1.getValue(), newcaracter);
            }
        });

        jSlider1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                newcaracter.setdifficulty(jSlider1.getValue(), newcaracter);
                jSlider1CaretPositionChanged(evt);

            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                newcaracter.setdifficulty(jSlider1.getValue(), newcaracter);
                System.out.print(  newcaracter.difficulty );
            }
        });

        Difficulty1.setFont(new java.awt.Font("Papyrus", 0, 18)); // NOI18N
        Difficulty1.setName(""); // NOI18N
        Difficulty1.setText("Easy      Imposible");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(Difficulty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(PlayerName, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(HeroName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Difficulty1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(HeroName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(HeroTipe, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Continue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(HeroName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(PlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Difficulty1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(HeroName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(HeroTipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jScrollPane1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Continue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        HeroName.getAccessibleContext().setAccessibleName("Hero name:");
        Continue.getAccessibleContext().setAccessibleName("Continue");
        Difficulty.getAccessibleContext().setAccessibleName("Difficulty");
    }// </editor-fold>

    private void PlayerNameActionPerformed(java.awt.event.ActionEvent evt) {
        newcaracter.get_name(PlayerName.getText(), newcaracter);
//        System.out.print(newcaracter.name);
//        System.out.print("BBBB\n");//
    }

    private void HeroTipeActionPerformed(java.awt.event.ActionEvent evt) {
      newcaracter.set_class(HeroTipe.getSelectedItem().toString(), newcaracter);
        Caracter.NewHero( newcaracter );

        String [] ss = Messenger.enumStatus(newcaracter);
        int i = 0;
        while(i < 12){
            StatusOutput.append( ss[i]);
            i++;

        }
    }

    private void HeroTipeItemStateChanged(java.awt.event.ItemEvent evt) {
//        System.out.print("HeroTipeItemStateChanged");
//        //NewPlayer.hero_class = HeroTipe.getSelectedItem().toString();
//        System.out.print(hero_class );
//  System.out.print(hero_class );
        newcaracter.set_class(HeroTipe.getSelectedItem().toString(), newcaracter);
        Caracter.NewHero( newcaracter );

        String [] ss = Messenger.enumStatus(newcaracter);
        int i = 0;
        while(i < 12){
            StatusOutput.append( ss[i]);
            i++;

        }
    }

    private void HeroTipePropertyChange(java.beans.PropertyChangeEvent evt) {
//        System.out.print("HeroTipePropertyChange");
//       // NewPlayer.hero_class = HeroTipe.getSelectedItem().toString();
//        System.out.print(hero_class );
        newcaracter.set_class(HeroTipe.getSelectedItem().toString(), newcaracter);
        Caracter.NewHero( newcaracter );

        String [] ss = Messenger.enumStatus(newcaracter);
        int i = 0;
        while(i < 12){
            StatusOutput.append( ss[i]);
            i++;

        }
    }

    private void jSlider1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {

    }
    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {
        System.out.print( "" + newcaracter.difficulty);
    }
    private void PlayerNameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
        newcaracter.name_add( PlayerName.getText(), newcaracter);
    }
    private void PlayerNamePropertyChange(java.beans.PropertyChangeEvent evt) {
        newcaracter.name_add( PlayerName.getText(), newcaracter);
    }
    private void PlayerNameKeyTyped(java.awt.event.KeyEvent evt) {
        newcaracter.name_add( PlayerName.getText(), newcaracter);
    }
    private void ContinueActionPerformed(java.awt.event.ActionEvent evt) {
        Save_Hero_to_file.saveHeroToFile(newcaracter);
       // newcaracter.saveHeroToFile();
        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        InterrogateAndCheckPlayer.continue_after_insertion( newcaracter, topFrame );
    }


    Observable observabile = new Observable();

    public Observable getObservabile() {
        return observabile;
    }

    public void setObservabile(Observable observabile) {
        this.observabile = observabile;
    }


    // Variables declaration - do not modify
    private javax.swing.JButton Continue;
    private java.awt.Label Difficulty;
    private java.awt.Label Difficulty1;
    private java.awt.Label HeroName;
    private java.awt.Label HeroName1;
    private javax.swing.JComboBox<String> HeroTipe;
    private javax.swing.JTextField PlayerName;
    public javax.swing.JTextArea StatusOutput;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration
}

